services:
  # train-devcontainer:
  #   image: mcr.microsoft.com/devcontainers/python:1-3.12-bullseye
  #   volumes:
  #     - .:/workspace:cached
  #   command: sleep infinity

  train:
    build: ./training
    volumes:
      - ./training/models:/models
    depends_on:
      - orchestration

  # PostgreSQL database for our services
  database:
    build: ./database
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - ./database/.env

  # MLFlow server for experiment tracking (uses the database)
  experiment-tracking:
    build: ./experiment-tracking
    ports:
      - 5000:5000
    depends_on:
      - database

  # prefect server
  orchestration:
    build: ./orchestration
    ports:
      - 4200:4200

  # frontend-devcontainer:
  #   image: mcr.microsoft.com/devcontainers/python:1-3.13-bullseye
  #   volumes:
  #     - .:/workspace:cached
  #     - ./training/models:/workspace/frontend/models
  #   command: sleep infinity

  frontend:
    build: ./frontend
    ports:
      - 9696:9696
    volumes:
      - ./training/models:/app/models

  # deploy-batch-devcontainer:
  #   image: mcr.microsoft.com/devcontainers/python:1-3.13-bullseye
  #   volumes:
  #     - .:/workspace:cached
  #     - ./training/models:/workspace/deploy_batch/models
  #     - ./training/data:/workspace/deploy_batch/data
  #   command: sleep infinity

  deploy-batch:
    build: ./deploy_batch
    volumes:
      - ./training/models:/models
      - ./training/data:/data
    depends_on:
      - orchestration

  # monitoring-devcontainer:
  #   image: mcr.microsoft.com/devcontainers/python:1-3.13-bullseye
  #   volumes:
  #     - .:/workspace:cached
  #   command: sleep infinity

  monitoring:
    build: ./monitoring
    volumes:
      - ./monitoring/metrics:/metrics
    depends_on:
      - orchestration

  # grafana server
  # default login: admin/admin
  grafana:
    image: grafana/grafana
    restart: unless-stopped
    volumes:
      - grafana-data-config-datasources:/etc/grafana/provisioning/datasources:ro
      - grafana-data-config-dashboards:/etc/grafana/provisioning/dashboards:ro
      - grafana-data-dashboards:/opt/grafana/dashboards
    ports:
      - "3400:3000"

volumes:
  postgres-data:
  # grafana volumes for persistent configuration and datastorage
  grafana-data-config-datasources:
  grafana-data-config-dashboards:
  grafana-data-dashboards:
